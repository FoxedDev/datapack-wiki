---
title: Array Iteration
description: This guide explains how to loop through an array's items in a Minecraft datapack
version: 1.21.6
---

# Array Iteration
Array Iteration allows us to loop through an array and do something with each item individually (for example, add every item in an array, output each array item individually, modify all elements in an array, combine strings in an array, etc.)

## Method
For this guide, imagine our array is defined with the following:
```mcfunction
data modify storage minecraft:example ExampleArray set value ["Array Item 1", "Array Item 2", "Array Item 3"]
```

The steps to iterate through the array are:
1. Store the length of the array in a score
2. Do something with the first element in the array (`array[0]`) - you can either just read the element, or modify it
3. Copy the first element to the end of the array, then remove the first element.
4. Decrease the length score by 1
5. If the length score is 1 or more, repeat from step 2 until it isn't

First, we need a function which will begin the process. This is where we do step 1 and then run the loop function:

```mcfunction:array_start.mcfunction
# Get the length of the array, and store it in a fake player in a scoreboard
# (we assume you already have created a scoreboard - do this in your load function)
execute store result $length <objective> run data get storage minecraft:example ExampleArray

# If the length is at least 1, run the loop function
execute if score $length <objective> matches 1.. run function <namespace>:array_loop
```

In the `array_loop` function, you can do whatever you want to the array item, including modifying it. In this example, we will send the array item to chat, and then replace it with `"Iterated"`

```mcfunction:array_loop.mcfunction
# We can access the current array item with "storage minecraft:example ExampleArray[0]"

# Send the current array element to chat
tellraw @a {"nbt":"ExampleArray[0]","storage":"minecraft:example"}

# Replace the current array element with "Iterated"
data modify storage minecraft:example ExampleArray[0] set value "Iterated"

# Copy the current element to the end of the array then remove the current element (so the loop will work)
data modify storage minecraft:example ExampleArray append from storage minecraft:example ExampleArray[0]
data remove storage minecraft:example ExampleArray[0]

# Decrease the length score
scoreboard players remove <objective> $length 1

# If there are still items left (length is not 0), run the loop again
execute if score $length <objective> matches 1.. run function <namespace>:array_loop
```

The chat output should be as follows:
```mcfunction
Array Item 1
Array Item 2
Array Item 3

# /data get storage minecraft:example ExampleArray
Output: ["Iterated", "Iterated", "Iterated"]
```